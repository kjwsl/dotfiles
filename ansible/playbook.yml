---
- name: Manage system dependencies and dotfiles
  hosts: localhost
  connection: local
  gather_facts: true
  become: false

  vars:
    dotfiles:
      - ".zshrc"
      - ".zshenv"
      - ".p10k.zsh"
      - ".profile"
      - ".oh-my-bash"
      - ".envrc"
      - ".aliasrc"
      - ".bash_eww"
      - ".bash_local"
      - ".bashrc"
      - ".clang-format"
      - ".gitconfig"
      - ".gitignore"
      - ".vim"
      - ".fonts"
      - ".config/fish"
      - ".config/fontconfig"
      - ".config/ghostty"
      - ".config/kitty"
      - ".config/nix"
      - ".config/nvim"
      - ".config/sops"
      - ".config/tmux"
      - ".config/wezterm"
      - ".config/wslu"
      - ".config/zsh"

  tasks:
    - name: Gather facts without sudo
      setup:
      become: false

    - name: Install system packages
      package:
        name: "{{ item }}"
        state: present
      loop:
        - git
        - curl
        - wget
        - python3
        - python3-pip
      when: ansible_os_family != "Darwin"

    - name: Install Homebrew packages (macOS)
      homebrew:
        name: "{{ item }}"
        state: present
      loop:
        - git
        - curl
        - wget
        - python
        - fish
        - ansible
      when: ansible_os_family == "Darwin"

    - name: Install Python packages (non-macOS)
      pip:
        name: "{{ item }}"
        state: present
      loop:
        - ansible
        - ansible-core
      become: false
      when: ansible_os_family != "Darwin"

    - name: Install Ansible collections
      ansible.builtin.command: ansible-galaxy collection install -r requirements.yml
      args:
        chdir: "{{ playbook_dir }}"
      become: false
      register: ansible_collections_result

    - name: Create backup directory
      file:
        path: "{{ ansible_env.HOME }}/.dotfiles-backup"
        state: directory
        mode: '0755'
      become: false

    - name: Backup existing files and directories
      shell: |
        if [ -e "{{ ansible_env.HOME }}/{{ item }}" ]; then
          mv "{{ ansible_env.HOME }}/{{ item }}" "{{ ansible_env.HOME }}/.dotfiles-backup/{{ item | basename }}_$(date +%Y%m%d_%H%M%S)"
        fi
      loop: "{{ dotfiles }}"
      become: false

    - name: Create symbolic links for dotfiles
      file:
        src: "{{ playbook_dir }}/../{{ item }}"
        dest: "{{ ansible_env.HOME }}/{{ item }}"
        state: link
        force: yes
        follow: false
      loop: "{{ dotfiles }}"
      become: false

    - name: Install Fisher package manager
      shell: "fish -c 'curl -sL https://raw.githubusercontent.com/jorgebucaran/fisher/main/functions/fisher.fish | source'"
      args:
        creates: "{{ ansible_env.HOME }}/.config/fish/functions/fisher.fish"
      become: false
      when: ansible_os_family != "Windows"

    - name: Install Fisher plugins
      shell: "fish -c 'fisher install {{ item }}'"
      loop:
        - jorgebucaran/fisher
        - jorgebucaran/nvm.fish
        - franciscolourenco/done
      become: false
      when: ansible_os_family != "Windows"

    - name: Verify Ansible collections installation
      debug:
        msg: "Ansible collections installed successfully"
      when: ansible_collections_result.rc == 0 
;; -*- mode: emacs-lisp; lexical-binding: t; coding: utf-8-emacs-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(command-history corfu-history minibuffer-history consult--theme-history extended-command-history evil-ex-search-history read-number-history evil-ex-history Man-topic-history vertico-repeat-history file-name-history))
(setq command-history '((doom/info) (execute-extended-command nil "doom/info" "doom") (doom/help) (execute-extended-command nil "doom/help" "doom/s") (evil-record-macro 32) (evil-change 3620 3626 'inclusive) (evil-yank 3504 3593 'line nil nil) (evil-change 3534 3537 'inclusive) (evil-change 3521 3527 'inclusive) (evil-yank 3447 3504 'line nil nil) (find-file "~/.config/doom/config.el" t) (find-file "~/.config/doom/init.el" t) (find-file "~/gh/bevy-flappy/" t) (find-file "~/.config/doom/" t) (find-file "~/.config/doom/" t) (find-file "~/.config/doom/config.org" t) (find-file "~/.config/doom/config.el" t) (find-file "~/.config/doom/config.org" t) (find-file "~/.config/doom/config.el" t) (evil-snipe-t nil '(41)) (evil-change 3673 3674 'inclusive) (evil-change 3648 3654 'inclusive) (evil-snipe-F nil '(34)) (evil-snipe-f nil '(34)) (evil-replace 3659 3660 'exclusive 97) (find-file "~/.config/doom/config.el" t) (find-file "~/.config/doom/packages.el" t) (execute-extended-command nil "eudc-get-email" "email") (er/mark-email) (execute-extended-command nil "er/mark-email" "email") (find-file "~/.config/doom/config.el" t) (dired "~/gh/" nil) (evil-record-macro 113) (eshell nil) (execute-extended-command nil "eshell" "eshell") (evil-delete 3477 3493 'line) (evil-change 3465 3475 'inclusive) (find-file "~/.config/doom/config.el" t)))
(setq corfu-history '("save-some-buffers" "catppuccin-mocha-colors" "print!(…)"))
(setq minibuffer-history '("Youtube"))
(setq consult--theme-history '("catppuccin"))
(setq extended-command-history '("doom/info" "doom/help" "eudc-get-email" "er/mark-email" "eshell" "doom/help-packages" "doom/reload"))
(setq evil-ex-search-history '("lsp" "font" "map" "json" "font"))
(setq evil-ex-history '("w" "wq" "w" "Ex"))
(setq vertico-repeat-history '((doom/open-private-config "~/.config/doom/") (doom/open-private-config "~/.config/doom/config") (doom/open-private-config "~/.config/doom/init") (find-file "~/gh/" "bevy-flappy/") (save-buffer "~/.config/doom/ wd") (find-file "~/.config/doom/") (dired "~/.config/doom/") (find-file "~/.config/") (dired "~/.config/doom/") (find-file "~/.config/doom/") (find-file "~/.config/doom/config.org") (find-file "~/.config/doom/" "config.el") (find-file "~/.config/doom/config.org") (doom/open-private-config "~/.config/doom/" "config.el") (find-file "~/.config/doom/" "config.el") (doom/open-private-config "~/.config/doom/" "packages.el") (find-file "~/. ") (find-file "~/.config/doom/") (+lookup/documentation "j") (doom/open-private-config "~/.config/doom/config") (dired "~/" "gh/") (find-file "~/") (doom/open-private-config "~/.config/doom/config") (manual-entry " wd") (dired "~/playground/rstest/src/main.rs") (doom/open-private-config "~/.config/doom/config") (helpful-callable "c") (doom/open-private-config "~/.config/doom/config") (helpful-callable "c") (doom/open-private-config "~/.config/doom/init") (doom/open-private-config "~/.config/doom/config") (helpful-callable "co") (consult-theme "catppu") (consult-theme "cat") (find-file "~/.config/doom/init") (dired "~/.config/doom/") (helpful-callable "c") (doom/open-private-config "~/.config/doom/packa") (doom/open-private-config "~/.config/doom/init") (doom/open-private-config "~/.config/doom/pa") (dired "/Users/") (consult-theme "catpu") (find-file "~/packag") (find-file "~/") (dired "~/.config/doom/" "config.el") (manual-entry "j-") (manual-entry "jk") (find-file "~/.config/emacs/")))
(setq file-name-history '("~/gh/bevy-flappy/src/main.rs" "~/.config/doom/config.el" "~/.config/doom/init.el" "~/gh/bevy-flappy/" "~/.config/doom/" "~/.config/doom/config.org" "~/.config/doom/config.el" "~/.config/doom/config.org" "~/.config/doom/config.el" "~/.config/doom/packages.el" "~/.config/doom/config.el" "~/gh/" "~/.config/doom/config.el" "~/playground/rstest/src/main.rs" "~/.config/doom/config.el" "~/.config/doom/init.el" "~/.config/doom/config.el" "~/.config/doom/init.el" "~/.config/doom/packages.el" "~/.config/doom/init.el" "~/.config/doom/packages.el" "~/.config/doom/config.el" "~/.config/emacs/.local/etc/workspaces/autosave" "~/.config/emacs"))
(setq evil-jumps-history '((192 #1="/Users/ray/gh/bevy-flappy/src/main.rs") (196 #1#) (225 #1#) (251 "/Users/ray/gh/bevy-flappy/src/")))
(setq kill-ring '("generated  Aug 11, 2025 02:40:25
system     MacOS 15.5 Darwin 24.5.0 arm64 ns
emacs      31.0.50 EMACSDIR=~/.config/emacs/
           EMACS=/Applications/Emacs.app/Contents/MacOS/Emacs-arm64-11
doom       3.0.0-pre PROFILE=_default@0 HEAD -> master, origin/master 342b189
           2025-07-21 00:48:03 +0900 ~/.config/doom/
shell      /opt/homebrew/bin/fish
features   ACL GLIB GMP GNUTLS JPEG LIBXML2 MODULES NOTIFY KQUEUE NS PDUMPER PNG RSVG
           SQLITE3 THREADS TIFF TOOLKIT_SCROLL_BARS TREE_SITTER WEBP XIM ZLIB
traits     gui server-running envvar-file
modules    :config use-package :completion (corfu +orderless) vertico :ui doom
           doom-dashboard hl-todo modeline ophints (popup +defaults) (vc-gutter
           +pretty) vi-tilde-fringe workspaces :editor (evil +everywhere)
           file-templates fold snippets :emacs dired electric undo vc :checkers syntax
           :tools (eval +overlay) lookup magit :os macos :lang (cc +lsp) emacs-lisp
           json (java +lsp) kotlin markdown nix org plantuml graphviz python (rust
           +lsp) sh zig :config (default +bindings +smartparens)
packages   (catppuccin-theme) (mu4e)
" "show hover automatically when cursor is on symbol" "cursor" "(setq lsp-ui-doc-show-with-cursor t) ; show hover automatically when cursor is on symbol
" "enable the lsp-ui doc popup" "osr" "enable" "(setq lsp-ui-doc-enable t) ; enable the lsp-ui doc popup
" ";;
;;
" ";" ";" "save-buffer" "-" "buffer" "(map! :leader
      :desc \"Save buffer\" \"w w\" #'save-buffer)
" "(setq doom-the)
" "catppuccin" "    print!()
" "!" "" "custom" "m" "custom" "(lambda () (interactive)  (windmove-up))" "(split-window-below)" "up" "#'split-window-below
" "(lambda () (interactive) (split-window-below) (windmove-up))" "#'split-window-below
" "(lambda () (interactive) (split-window-below) (windmove-up))" "(lambda ()  (split-window-right) (windmove-left))" "(interactive)" "left" "#'split-window-right" "(lambda () (interactive) (split-window-right) (windmove-left))" "lambda () (interactive) (split-window-right) (windmove-left)" "#'split-window-right" "(lambda () (interactive) (split-window-below) (windmove-up))" "(map! :leader
      (:prefix (\"s\" . \"split window\")
        :desc \"Split left (custom)\" \"h\" (lambda () (interactive) (split-window-right) (windmove-left))
        :desc \"Split below (horizontal)\" \"j\" #'split-window-below
        :desc \"Split above (custom)\" \"k\" (lambda () (interactive) (split-window-below) (windmove-up))
        :desc \"Split right (vertical)\" \"l\" #'split-window-right))
" "(map! :leader
      :desc \"Save buffer and quit\" \"w q\"
      (lambda ()
        (interactive)
        (save-buffer)
        (save-buffers-kill-terminal)))
" "(map! :leader
      :desc \"Save buffer\" \"w w\" #'save-buffer)
" "

" "(map! \"z x\" :desc \"Escape from Insert Mode\" )
" "(after! evil-escape
  (setq evil-escape-key-sequence \"zx\"))
" ":leader 
" ":leader 
" ":leader " ";; zxc
" ";; 
" "(setq doom-theme 'catppuccin)" "
" "
" "(setq doom-theme 'catppuccin)
" ";" ";" ";" ";" ";" ";" ";" ";" ";" ";" ";" ";" ";" ";" ";" ";" ";" ";" ";" ";" "(setq doom-theme 'catppuccin)" "(package! catppuccin-theme)"))
(setq register-alist '((48 . "(setq lsp-ui-doc-show-with-cursor t) ; show hover automatically when cursor is on symbol
") (113)))
(setq mark-ring 'nil)
(setq global-mark-ring 'nil)
(setq search-ring 'nil)
(setq regexp-search-ring 'nil)
